{"ast":null,"code":"var _jsxFileName = \"/home/laine/app/vote-app/frontend/src/components/LoginForm.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction LoginForm() {\n  _s();\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [isRegister, setIsRegister] = useState(false);\n  const [message, setMessage] = useState(\"\");\n  const submit = async e => {\n    e.preventDefault();\n    setMessage(\"\");\n    const url = isRegister ? \"/api/auth/register\" : \"/api/auth/login\";\n    try {\n      const res = await fetch(url, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          username,\n          password\n        })\n      });\n      const data = await res.json();\n      if (!res.ok) {\n        setMessage(data.message || \"Error\");\n        return;\n      }\n      // store token and user info\n      localStorage.setItem(\"auth\", JSON.stringify(data));\n      // simple UI update: reload to let pages read auth from localStorage\n      window.location.reload();\n    } catch (err) {\n      setMessage(err.message);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: isRegister ? \"Register\" : \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: submit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        value: username,\n        onChange: e => setUsername(e.target.value),\n        placeholder: \"username\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        value: password,\n        onChange: e => setPassword(e.target.value),\n        placeholder: \"password\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: isRegister ? \"Register\" : \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setIsRegister(!isRegister),\n      children: isRegister ? \"Switch to Login\" : \"Switch to Register\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), message && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: \"red\"\n      },\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 19\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n}\n_s(LoginForm, \"rAVfbcFnGHnCl6Tn+1G1fxdd+6M=\");\n_c = LoginForm;\nexport default LoginForm;\nvar _c;\n$RefreshReg$(_c, \"LoginForm\");","map":{"version":3,"names":["useState","jsxDEV","_jsxDEV","LoginForm","_s","username","setUsername","password","setPassword","isRegister","setIsRegister","message","setMessage","submit","e","preventDefault","url","res","fetch","method","headers","body","JSON","stringify","data","json","ok","localStorage","setItem","window","location","reload","err","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","value","onChange","target","placeholder","required","type","onClick","style","color","_c","$RefreshReg$"],"sources":["/home/laine/app/vote-app/frontend/src/components/LoginForm.js"],"sourcesContent":["import { useState } from \"react\";\n\nfunction LoginForm() {\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [isRegister, setIsRegister] = useState(false);\n  const [message, setMessage] = useState(\"\");\n\n  const submit = async (e) => {\n    e.preventDefault();\n    setMessage(\"\");\n    const url = isRegister ? \"/api/auth/register\" : \"/api/auth/login\";\n    try {\n      const res = await fetch(url, {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify({ username, password }),\n      });\n      const data = await res.json();\n      if (!res.ok) {\n        setMessage(data.message || \"Error\");\n        return;\n      }\n      // store token and user info\n      localStorage.setItem(\"auth\", JSON.stringify(data));\n      // simple UI update: reload to let pages read auth from localStorage\n      window.location.reload();\n    } catch (err) {\n      setMessage(err.message);\n    }\n  };\n\n  return (\n    <div>\n      <h3>{isRegister ? \"Register\" : \"Login\"}</h3>\n      <form onSubmit={submit}>\n        <input\n          value={username}\n          onChange={(e) => setUsername(e.target.value)}\n          placeholder=\"username\"\n          required\n        />\n        <input\n          type=\"password\"\n          value={password}\n          onChange={(e) => setPassword(e.target.value)}\n          placeholder=\"password\"\n          required\n        />\n        <button type=\"submit\">{isRegister ? \"Register\" : \"Login\"}</button>\n      </form>\n      <button onClick={() => setIsRegister(!isRegister)}>\n        {isRegister ? \"Switch to Login\" : \"Switch to Register\"}\n      </button>\n      {message && <p style={{ color: \"red\" }}>{message}</p>}\n    </div>\n  );\n}\n\nexport default LoginForm;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}